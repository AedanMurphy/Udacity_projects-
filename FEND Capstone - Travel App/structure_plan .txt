motivation: This is what you want to do, this is fun, it is hard but each step is exciting, when things click you just want to get to the next thing

Things to consider: 
- multiple APIs
- The project requires dates, and location. If dates are within a week then the Openweather API should
pull data for that week's weather. 

- For future weather data, use the WeatherBit API 
- For coordinates for the Geonames API
- Pixabay API for display image of location

Structure: 

- What files do I need? look at othes works
	* webpack set up
		**note app.get('/', function (req, res) {
   			 res.sendFile('dist/index.html')
				})
		did not follow intruction, might cause problems later
		** did not add client.handlesubmit functionality don't know how to add it, look at older project
`		helps confirm a custom function and refernce the newly created client library
		**skipped optimize-css-assets-webpack-plugin, there was installation issues 
		** minicssextractplugin used to shrinck the size of the css styling of deployment
		** Do service workers later? Doing it now would lead to extra cache lying around. More vulnerabilities
	*API setup 3x
	- Geonames: 
	Username: AedanMurphy or aedanmurphy // AedanMurphy@outlook.com
	Password: Link481357
	** replace openweather positions, instead of zipcode you get city, and instead of temperture, feeling and date, GET latitude and longitude objects (FOR ENTRY)
	instead of one object, we have multiple.
	** I will need a TEXTField HTML for for a countdown function rendering start and end dates, how to get inforamtion from the DOM. store data when i have it?

	- Weatherbit API
	Username: aedanmurphy
	Passwrod: Zelda481357
	** distinguish between current forcast and future (daily) how would I get both to work?
	** How to include dates? format (australia standard), 

	-pixabay API
	** username: aedanmurphy
	** Password: Tetris481357
	- parameters for images? 
	- how will i submit data from the location field (html) tp a pixaay url with having SPACES In the url???

- REFER TO THE EXAMPLE IMAGES TO UNDERSTAND THE MINIMUN STANDARD.

- revamp project 3 to fit this project
- html/css or javascript
	** HTML/CSS - finished
	** return to finish results template 

- javascript
	** server.js
	** app.js 
	** index.js
- what functions that do what? 
- final steps, refactor and readability 

GETTING STARTED: 
travel app that at a MINIMUM has trip location, date from when you go and return,
display weather and an image of the location using information from the external API 

Refer to example code 

REMEMBER TO REFER TO THESE IF YOU GET STUCK ON AN ERROR
What is the Document?
What are events?
How do we listen for them?
How can we access elements within the DOM?
We can also access elements with getElementsByClassName(). What does this method return, and how do you use it?
Every element has an innerHTML property that represents the markup of the element's content. How can you leverage this property to get and set content?
What is the Fetch API and how can we use it to get data?
What are callback functions and how do we use them appropriately?
What is asynchronous javascript?
How/Why do we use Express?
How/Why do we use Webpack?
How/Why do we use service workers?




